Select Clause with Where clause 

1) Display details of jobs where the minimum salary is greater than 10000.
	SELECT * FROM JOBS WHERE MIN_SALARY > 10000;

2) Display the first name and join date of the employees who joined between 2002 and 2005.
	SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE BETWEEN '2002-01-01' AND '2005-01-01' ORDER BY HIRE_DATE;

3) Display first name and join date of the employees who is either IT Programmer or Sales Man.
	SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE JOB_ID IN ('IT_PROG','SA_MAN');

4) Display first name, salary, commission pct, and hire date for employees with salary less than 10000.
	SELECT FIRST_NAME, SALARY, COMMISSION_PCT, HIRE_DATE FROM EMPLOYEES WHERE SALARY < 10000;

5) Display job Title, the difference between minimum and maximum salaries for jobs with max salary in the range 10000 to 20000.
	SELECT JOB_TITLE, MAX_SALARY-MIN_SALARY DIFFERENCE FROM JOBS WHERE MAX_SALARY BETWEEN 10000 AND 20000;

6) Display employees where the first name or last name starts with S.
	SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE FIRST_NAME LIKE 'S%' OR LAST_NAME LIKE 'S%';

7) Display details of jobs in the descending order of the title.
	SELECT * FROM JOBS ORDER BY JOB_TITLE DESC;

8) Display employees who joined in the month of May.
	select first_name,hire_date from employees where date_format(hire_date,'%m')='05'; or
	select first_name,hire_date from employees where hire_date like '%05%';

9) Display details of the employees where commission percentage is null and salary in the range 5000 to 10000 and department is 30.
	SELECT * FROM EMPLOYEES WHERE COMMISSION_PCT IS NULL AND SALARY BETWEEN 5000 AND 10000 AND DEPARTMENT_ID=30;

  

Join 

1). Display job title, employee ID, number of days between ending date and starting date for all jobs in department 30 from job history.
	SELECT EMPLOYEE_ID, JOB_TITLE, END_DATE-START_DATE DAYS FROM JOB_HISTORY NATURAL JOIN JOBS WHERE DEPARTMENT_ID=30;

2) Display department name and manager first name.
	SELECT DEPARTMENT_NAME, FIRST_NAME FROM DEPARTMENTS D JOIN EMPLOYEES E ON (D.MANAGER_ID=E.EMPLOYEE_ID);

3) Display department name, manager name, and city.
	SELECT DEPARTMENT_NAME, FIRST_NAME, CITY FROM DEPARTMENTS D JOIN EMPLOYEES E ON (D.MANAGER_ID=E.EMPLOYEE_ID) JOIN LOCATIONS L USING (LOCATION_ID);

4) Display country name, city, and department name.
	SELECT COUNTRY_NAME, CITY, DEPARTMENT_NAME FROM COUNTRIES JOIN LOCATIONS USING (COUNTRY_ID) JOIN DEPARTMENTS USING (LOCATION_ID);

5) Display employee name and country in which he is working.
	SELECT FIRST_NAME, COUNTRY_NAME FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID) JOIN LOCATIONS USING( LOCATION_ID) JOIN COUNTRIES USING ( COUNTRY_ID);



Functions 

1. Display employees who joined in the month of May.
	select first_name,hire_date from employees where date_format(hire_date,'%m')='05';

2. Display first name, salary, and round the salary to thousands.
	SELECT FIRST_NAME, SALARY, ROUND(SALARY, -3) FROM EMPLOYEES;

3. Display first name and date of first salary of the employees.
	SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES;

4. Display first name and experience of the employees.
	SELECT FIRST_NAME, SYSDATE(), HIRE_DATE, DATEDIFF( SYSDATE(), hire_date )/365 FROM employees;

5. Display the length of first name for employees where last name contain character ‘b’ after 3rd position.
	SELECT LENGTH(FIRST_NAME), LAST_NAME FROM EMPLOYEES WHERE INSTR(LAST_NAME,'B') > 3;

6. Display first name in upper case and email address in lower case for employees where the first name and email address are same irrespective of the case.
	SELECT UPPER(FIRST_NAME), LOWER(EMAIL) FROM EMPLOYEES WHERE UPPER(FIRST_NAME)= LOWER(EMAIL);

7. Display employees who joined in 1996.
	Select * from employees where year(hire_date) = "1996";

8. Display the number of days between system date and 1st January 1995.
	Select sysdate() - to_date('01-jan-1995') from employees;

9. Display how many employees joined in each month of the current year.
	Select month(hire_date),count(*) from employees where month(hire_date) = month(sysdate);



MySQL Aggregate function 

1. Display employee ID and the date on which he ended his previous job.
	SELECT EMPLOYEE_ID, MAX(END_DATE) FROM JOB_HISTORY GROUP BY EMPLOYEE_ID;

2. Display number of employees joined after 15th of the month.
	Select count(*) from employees where month(hire_date) > 15;


Select With Group by 

3. Display the country ID and number of cities we have in the country.
	SELECT COUNTRY_ID,  COUNT(*)  FROM LOCATIONS GROUP BY COUNTRY_ID;

4. Display average salary of employees in each department who have commission percentage.
	SELECT DEPARTMENT_ID, AVG(SALARY) FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID;

5. Display job ID, number of employees, sum of salary, and difference between highest salary and lowest salary of the employees of the job.
	SELECT JOB_ID, COUNT(*), SUM(SALARY), MAX(SALARY)-MIN(SALARY) SALARY FROM EMPLOYEES GROUP BY JOB_ID;

6. Display job ID for jobs with average salary more than 10000.
	SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY)>10000;

7. Display years in which more than 10 employees joined.
	Select year(hire_date) from employees group by year(hire_date) having count(employee_id) > 10;

8. Display departments in which more than five employees have commission percentage.
	SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE COMMISSION_PCT IS NOT NULL GROUP BY DEPARTMENT_ID HAVING COUNT(COMMISSION_PCT)>5;

9. Display department name and number of employees in the department.
	SELECT DEPARTMENT_NAME, COUNT(*) FROM EMPLOYEES NATURAL JOIN DEPARTMENTS GROUP BY DEPARTMENT_NAME;

10. Display employee ID for employees who did more than one job in the past.
	SELECT EMPLOYEE_ID FROM JOB_HISTORY GROUP BY EMPLOYEE_ID HAVING COUNT(*) > 1;
